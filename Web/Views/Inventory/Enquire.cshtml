@using Syncfusion.EJ2
@using Newtonsoft.Json
@{
    var _sectionList = new Syncfusion.EJ2.DropDowns.DropDownList()
    {
        DataSource = ViewBag.sectionList,
        Query = "new ej.data.Query()",
        Fields = new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings() { Value = "ID", Text = "Description" },
        AllowFiltering = true,
        ActionComplete = "actionComplete"
    };
    object displaySection;
    displaySection = "displaySectionFN";

    var _locationList = new Syncfusion.EJ2.DropDowns.DropDownList()
    {
        DataSource = ViewBag.locationList,
        Query = "new ej.data.Query()",
        Fields = new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings() { Value = "ID", Text = "Description" },
        AllowFiltering = true,
        ActionComplete = "actionComplete"
    };
    object displayLocation;
    displayLocation = "displayLocationFN";
}

@section ControlsSection{
    <link href="~/styles/Grid/style.css" rel="stylesheet" />
    <div class="col-lg-12 control-section">
        <div class="row">
            <span id='msg' class="padding-right"></span>
        </div>
        <ejs-grid id="Grid" height="380" rowHeight="38"
                  load="load"
                  allowPaging="true" allowFiltering="true" allowSorting="true"
                  allowExcelExport="true" toolbarClick="toolbarClick">
            <e-grid-filterSettings type="Excel"></e-grid-filterSettings>
            <e-grid-pagesettings pageCount="10"></e-grid-pagesettings>
            <e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="true" allowEditOnDblClick="true" showDeleteConfirmDialog="true"></e-grid-editSettings>
            <e-data-manager url="/Inventory/_EnquireDatasource"  adaptor="UrlAdaptor"></e-data-manager>

            <e-grid-columns>
                <e-grid-column field="ID" isPrimaryKey="true" headerText="ID" visible="false" type="number" textAlign="Right"></e-grid-column>
                <e-grid-column field="BarCode" headerText="Barcode" type="string" validationRules="@(new Dictionary<string, object>() {{ "required",true}, { "minLength",6}, { "maxLength",30} })"></e-grid-column>
                <e-grid-column field="Description" headerText="Item Description" type="string" validationRules="@(new Dictionary<string, object>() {{ "required",true}, { "minLength",2}, { "maxLength",200}})"></e-grid-column>
                <e-grid-column field="Section" headerText="Section" type="string" ></e-grid-column>
                <e-grid-column field="Location" headerText="Location" type="string" ></e-grid-column>
                @*<e-grid-column field="Section" headerText="Section"
                       dataSource="ViewBag.sectionList"
                       foreignKeyField="Description"
                       editType="dropdownedit"
                       edit="@(new {@params=_sectionList })" valueAccessor="displaySection">
        </e-grid-column>
        <e-grid-column field="Location" headerText="Location"
                       dataSource="ViewBag.locationList"
                       foreignKeyField="Description"
                       editType="dropdownedit"
                       edit="@(new {@params=_locationList })" valueAccessor="displayLocation">
        </e-grid-column>*@
                <e-grid-column field="Quantity" headerText="Quantity" type="string" textAlign="Right"></e-grid-column>
            </e-grid-columns>
        </ejs-grid>
    </div>

    <script>
        var dReady = false;
        var theme;
        var dtTime = false;
        var isDataBound = false;
        var isDataChanged = true;
        var intervalFun;
        var clrIntervalFun;
        var clrIntervalFun1;
        var clrIntervalFun2;
        var dropSlectedIndex = null;
        var stTime;
        stTime = performance.now();

        document.getElementById('Grid').addEventListener('DOMSubtreeModified', function () {
            if (dReady && stTime && isDataChanged) {
                var msgEle = document.getElementById('msg');
                var val = (performance.now() - stTime).toFixed(0);
                stTime = null;
                dtTime = false;
                dReady = false;
                isDataChanged = false;
                msgEle.innerHTML = 'Load Time: ' + "<b>" + val + "</b>" + '<b>ms</b>';
                msgEle.classList.remove('e-hide');
            }
        });

        function startTimer(args) {
            clearTimeout(clrIntervalFun);
            clearInterval(intervalFun);
            dtTime = true;
        }

        function load(args) {
            var grid = document.getElementById('Grid').ej2_instances[0];
            var rowHeight = grid.getRowHeight();  //height of the each row
            var gridHeight = grid.height;  //grid height
            var pageSize = grid.pageSettings.pageSize;   //initial page size
            var pageResize = (gridHeight - (pageSize * rowHeight)) / rowHeight; //new page size is obtained here
            grid.pageSettings.pageSize = pageSize + Math.round(pageResize);
            //this.dataSource = getTradeData(1000);
            this.on('data-ready', function () {
                dReady = true;
            });
        }

       function toolbarClick(args) {
            var gridObj = document.getElementById("Grid").ej2_instances[0];
            if (args.item.id === 'Grid_excelexport') {
                gridObj.excelExport(getExcelExportProperties("SectionList","Section Master List", 8));
                //exporttoExcel();
            }
           if (args.item.id === 'Grid_pdfexport') {
                gridObj.pdfExport(getPdfExportProperties("SectionList", "Section Master List", 8));
            }
            if (args.item.id === 'Grid_csvexport') {
                gridObj.csvExport(getCsvExportProperties("SectionList", "Section Master List", 8));
            }
        }

            function actionComplete() {
        return false;
    }

    function displayLocationFN(field, data, column) {
        var coldata = column.edit.params.dataSource;
        for (var i = 0; i < coldata.length; i++) {
            if (data.Location == coldata[i]['ID'])
                return coldata[i]['Description'];
        }
    }

    //start -- function for Section ID

    function displaySectionFN(field, data, column) {
        var coldata = column.edit.params.dataSource;
        for (var i = 0; i < coldata.length; i++) {
            if (data.Section == coldata[i]['ID'])
                return coldata[i]['Description'];
        }
    }

       function getPdfExportProperties(filename, header, columnCount) {
        return {
            header: {
                fromTop: 0,
                height: 120,
                contents: [
                    {
                        type: 'Text',
                        value: header,
                        position: { x: 280, y: 0 },
                        style: { textBrushColor: '#C25050', fontSize: 25 },
                    },
                ]
            },
            footer: {
                fromBottom: 160,
                height: 100,
                contents: [
                    //{
                    //    type: 'Text',
                    //    value: 'Thank you for your business !',
                    //    position: { x: 250, y: 20 },
                    //    style: { textBrushColor: '#C67878', fontSize: 14 }
                    //},
                    //{
                    //    type: 'Text',
                    //    value: '! Visit Again !',
                    //    position: { x: 300, y: 45 },
                    //    style: { textBrushColor: '#C67878', fontSize: 14 }
                    //}
                ]
            },
            
            fileName: filename +".pdf"
        };
    }

        function getExcelExportProperties(filename, header, columnCount) {
            return {
                header: {
                    headerRows: 2,
                    rows: [
                        {
                            index: 1,
                            cells: [

                                { index: 1, colSpan: columnCount, value: header, style: { fontColor: '#C25050', fontSize: 25, hAlign: 'Center', bold: true } }
                            ]
                        },
                        {
                            index: 2,
                            cells: [
                                { index: 1, style: { fontColor: '#C67878', fontSize: 15, bold: true }, width: 150 },
                                { index: 4, style: { fontColor: '#C67878', bold: true }, width: 300 },
                                { index: 5, style: { fontColor: '#C67878', bold: true }, width: 300 }
                            ]
                            //},
                            //{
                            //    index: 4,
                            //    cells: [
                            //        { index: 1, colSpan: 2, value: '2501 Aerial Center Parkway' },
                            //        { index: 4, value: 2034 },
                            //        { index: 5, value: 'date', width: 150 }
                            //    ]
                            //},
                            //{
                            //    index: 5,
                            //    cells: [
                            //        { index: 1, colSpan: 2, value: 'Tel +1 888.936.8638 Fax +1 919.573.0306' },
                            //        { index: 4, value: 'CUSOTMER ID', style: { fontColor: '#C67878', bold: true } },
                            //        { index: 5, value: 'TERMS', width: 150, style: { fontColor: '#C67878', bold: true } }
                            //    ]
                            //},
                            //{
                            //    index: 6,
                            //    cells: [
                            //        { index: 4, value: 564 },
                            //        { index: 5, value: 'Net 30 days', width: 150 }
                            //    ]
                        }
                    ]
                },

                //footer: {
                //    footerRows: 5,
                //    rows: [

                //        { cells: [{ colSpan: 6, value: 'Thank you for your business!', style: { fontColor: '#C67878', hAlign: 'Center', bold: true } }] },
                //        { cells: [{ colSpan: 6, value: '!Visit Again!', style: { fontColor: '#C67878', hAlign: 'Center', bold: true } }] }
                //    ]
                //},

                fileName: filename + ".xlsx"
            };
        }
    </script>

    <style>
        .highcontrast #msg {
            color: #FFFFFF
        }

        .e-bigger .e-grid .statustxt {
            position: relative;
            top: -2px;
        }

        .statustemp.e-inactivecolor {
            background-color: #ffd7cc;
        }

        .statustemp.e-activecolor {
            background-color: #ccffcc;
        }

        .statustxt.e-activecolor {
            color: #00cc00;
        }

        .statustxt.e-inactivecolor {
            color: #e60000;
        }

        .statustemp.e-inactivecolor {
            width: 64px;
        }

        .statustemp.e-activecolor {
            width: 57px;
        }

        .statustemp {
            position: relative;
            height: 19px;
            border-radius: 5px;
            text-align: center
        }

        #msg {
            font-family: "Segoe UI", "GeezaPro", "DejaVu Serif", sans-serif;
            font-size: 14px;
            font-weight: 400;
            opacity: 0.95;
            color: #333;
            float: right;
            margin-top: 3px;
        }

        @@media only screen and (max-width: 370px) {
            #msg {
                float: left;
                margin-top: 3px;
            }

            #GridOverview {
                margin-top: 36px;
            }
        }

        #samplecontainer {
            padding-top: 5px;
        }

        #myProgress {
            position: relative;
            height: 18px;
            width: 10em;
            text-align: left;
            background-color: white;
        }

        .highcontrast .e-grid #myProgress {
            background-color: black;
        }

        #myBar {
            position: absolute;
            width: 10%;
            height: 100%;
            background-color: #00b300;
        }

            #myBar.progressdisable {
                background-color: #df2222;
            }

        #label {
            position: relative;
            left: 10px;
            line-height: 18px;
            font-size: 10px;
            color: white;
        }
    </style>
}

@section ActionDescription{
    <div id="action-description">
    </div>
}

@section Meta{
    <meta name="description" content="" />
}

@section Description{
    <div id="description">
    </div>
}


